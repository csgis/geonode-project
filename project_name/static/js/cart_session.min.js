!function(window,angular){"use strict";function $$CookieWriter($document,$log,$browser){function buildCookieString(name,value,options){var path,expires;options=options||{},expires=options.expires,path=angular.isDefined(options.path)?options.path:cookiePath,angular.isUndefined(value)&&(expires="Thu, 01 Jan 1970 00:00:00 GMT",value=""),angular.isString(expires)&&(expires=new Date(expires));var str=encodeURIComponent(name)+"="+encodeURIComponent(value);str+=path?";path="+path:"",str+=options.domain?";domain="+options.domain:"",str+=expires?";expires="+expires.toUTCString():"",str+=options.secure?";secure":"";var cookieLength=str.length+1;return cookieLength>4096&&$log.warn("Cookie '"+name+"' possibly not set or overflowed because it was too large ("+cookieLength+" > 4096 bytes)!"),str}var cookiePath=$browser.baseHref(),rawDocument=$document[0];return function(name,value,options){rawDocument.cookie=buildCookieString(name,value,options)}}angular.module("ngCookies",["ng"]).provider("$cookies",[function(){function calcOptions(options){return options?angular.extend({},defaults,options):defaults}var defaults=this.defaults={};this.$get=["$$cookieReader","$$cookieWriter",function($$cookieReader,$$cookieWriter){return{get:function(key){return $$cookieReader()[key]},getObject:function(key){var value=this.get(key);return value?angular.fromJson(value):value},getAll:function(){return $$cookieReader()},put:function(key,value,options){$$cookieWriter(key,value,calcOptions(options))},putObject:function(key,value,options){this.put(key,angular.toJson(value),options)},remove:function(key,options){$$cookieWriter(key,void 0,calcOptions(options))}}}]}]),angular.module("ngCookies").factory("$cookieStore",["$cookies",function($cookies){return{get:function(key){return $cookies.getObject(key)},put:function(key,value){$cookies.putObject(key,value)},remove:function(key){$cookies.remove(key)}}}]),$$CookieWriter.$inject=["$document","$log","$browser"],angular.module("ngCookies").provider("$$cookieWriter",function(){this.$get=$$CookieWriter})}(window,window.angular),function(){angular.module("cart",["ngCookies"]).controller("CartList",function($scope,cart){$scope.cart=cart,$scope.layers_params="",$scope.newMap=function(){for(var items=cart.getCart().items,params="",i=0;i<items.length;i++)params+="layer="+items[i].detail_url.split("/")[2]+"&";window.location="/maps/new?"+params},$scope.bulk_perms_submit=function(){var items=cart.getCart().items,permissions=permissionsString($("#permission_form"),"base"),selected_ids=$.map(items,function(item){return item.id}),message=$("#bulk_perms_message");return 0==selected_ids.length?(message.find(".message").html("Please select at least one resource to set the permissions"),void message.addClass("alert-danger").removeClass("alert-success alert-warning hidden")):void $.ajax({type:"POST",url:"/security/bulk-permissions",data:{permissions:JSON.stringify(permissions),resources:selected_ids},success:function(data){var not_changed=$.parseJSON(data).not_changed;not_changed.length>0?(message.find(".message").html("Permissions correctly registered, although the following resources were skipped because you don't have the rights to edit their permissions:"),message.find(".extra_content").html(not_changed.join("</br>")),message.addClass("alert-warning").removeClass("alert-success alert-danger hidden")):(message.find(".message").html("Permissions correctly registered."),message.addClass("alert-success").removeClass("alert-warning alert-danger hidden"))},error:function(data){message.find(".message").html($.parseJSON(data).error),message.addClass("alert-danger").removeClass("alert-success alert-warning hidden")}})}}).directive("resourceCart",[function(){return{restrict:"E",templateUrl:"/static/geonode/js/templates/cart.html"}}]).service("cart",function($cookies){this.init=function(){this.$cart={items:this.fillCart()}},this.fillCart=function(){var geonodeCart=$cookies.getAll(),cartSession=[];return Object.keys(geonodeCart).length>1&&Object.keys(geonodeCart).forEach(function(key,index){if("csrftoken"!==key){var obj=JSON.parse(geonodeCart[key]);obj.$$hashKey="object:"+index,cartSession.push(obj)}}),cartSession},this.getCart=function(){return this.$cart},this.addItem=function(item){null===this.getItemById(item.id)&&(this.getCart().items.push(item),$cookies.putObject(item.uuid,item))},this.removeItem=function(item){if(null!==this.getItemById(item.id)){var cart=this.getCart();angular.forEach(cart.items,function(cart_item,index){cart_item.id===item.id&&(cart.items.splice(index,1),$cookies.remove(cart_item.uuid))})}},this.toggleItem=function(item){null===this.getItemById(item.id)?this.addItem(item):this.removeItem(item)},this.getItemById=function(itemId){var items=this.getCart().items,the_item=null;return angular.forEach(items,function(item){item.id===itemId&&(the_item=item)}),the_item},this.getFaClass=function(id){return null===this.getItemById(id)?"fa-cart-plus":"fa-remove"}}).run(["cart",function(cart){cart.init()}])}();